/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import{ByteEfficiencyAudit}from"./byte-efficiency-audit.js";import{UnusedJavascriptSummary}from"../../computed/unused-javascript-summary.js";import{JSBundles}from"../../computed/js-bundles.js";import*as i18n from"../../lib/i18n/i18n.js";import{estimateCompressionRatioForContent}from"../../lib/script-helpers.js";const UIStrings={title:"Reduce unused JavaScript",description:"Reduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity. [Learn how to reduce unused JavaScript](https://developer.chrome.com/docs/lighthouse/performance/unused-javascript/)."},str_=i18n.createIcuMessageFn(import.meta.url,UIStrings),UNUSED_BYTES_IGNORE_THRESHOLD=20480,UNUSED_BYTES_IGNORE_BUNDLE_SOURCE_THRESHOLD=512;function commonPrefix(e){if(!e.length)return"";const t=e.reduce(((e,t)=>e>t?e:t));let s=e.reduce(((e,t)=>e>t?t:e));for(;!t.startsWith(s);)s=s.slice(0,-1);return s}function trimCommonPrefix(e,t){return t&&e.startsWith(t)?"â€¦"+e.slice(t.length):e}class UnusedJavaScript extends ByteEfficiencyAudit{static get meta(){return{id:"unused-javascript",title:str_(UIStrings.title),description:str_(UIStrings.description),scoreDisplayMode:ByteEfficiencyAudit.SCORING_MODES.METRIC_SAVINGS,guidanceLevel:1,requiredArtifacts:["JsUsage","Scripts","SourceMaps","GatherContext","devtoolsLogs","traces","URL"]}}static async audit_(e,t,s){const r=await JSBundles.request(e,s),{unusedThreshold:i=UNUSED_BYTES_IGNORE_THRESHOLD,bundleSourceUnusedThreshold:n=UNUSED_BYTES_IGNORE_BUNDLE_SOURCE_THRESHOLD}=s.options||{},o=new Map,u=[];for(const[a,c]of Object.entries(e.JsUsage)){const d=e.Scripts.find((e=>e.scriptId===a));if(!d)continue;const l=r.find((e=>e.script.scriptId===a)),p=await UnusedJavascriptSummary.request({scriptId:a,scriptCoverage:c,bundle:l},s);if(0===p.wastedBytes||0===p.totalBytes)continue;const m=estimateCompressionRatioForContent(o,d.url,e,t),y={url:d.url,totalBytes:Math.round(m*p.totalBytes),wastedBytes:Math.round(m*p.wastedBytes),wastedPercent:p.wastedPercent};if(y.wastedBytes<=i)continue;if(u.push(y),!l||"errorMessage"in l.sizes)continue;const S=l.sizes;if(p.sourcesWastedBytes){const e=Object.entries(p.sourcesWastedBytes).sort(((e,t)=>t[1]-e[1])).slice(0,5).map((([e,t])=>{const s="(unmapped)"===e?S.unmappedBytes:S.files[e];return{source:e,unused:Math.round(t*m),total:Math.round(s*m)}})).filter((e=>e.unused>=n)),t=commonPrefix(l.map.sourceURLs());y.subItems={type:"subitems",items:e.map((({source:e,unused:s,total:r})=>({source:trimCommonPrefix(e,t),sourceBytes:r,sourceWastedBytes:s})))}}}return{items:u,headings:[{key:"url",valueType:"url",subItemsHeading:{key:"source",valueType:"code"},label:str_(i18n.UIStrings.columnURL)},{key:"totalBytes",valueType:"bytes",subItemsHeading:{key:"sourceBytes"},label:str_(i18n.UIStrings.columnTransferSize)},{key:"wastedBytes",valueType:"bytes",subItemsHeading:{key:"sourceWastedBytes"},label:str_(i18n.UIStrings.columnWastedBytes)}]}}}export default UnusedJavaScript;export{UIStrings};